import java.awt.FlowLayout;
import java.lang.Character;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JScrollBar;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.table.TableColumn;
import javax.swing.text.TableView.TableRow;
/**
 *
 * @author njood
 */
public class EnFrame extends javax.swing.JFrame {

    /**
     * Creates new form EnFrame
     */
    public EnFrame() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        plaintext = new javax.swing.JTextField();
        encrypt = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        key = new javax.swing.JTextField();
        tablecontainer = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        ciphertext = new javax.swing.JTextField();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        home = new javax.swing.JMenuItem();
        deframe = new javax.swing.JMenuItem();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setText("Plaintext:");

        plaintext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                plaintextActionPerformed(evt);
            }
        });

        encrypt.setText("Encrypt");
        encrypt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encryptActionPerformed(evt);
            }
        });

        jLabel3.setText("Key:");

        jLabel2.setText("Ciphertext:");

        ciphertext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ciphertextActionPerformed(evt);
            }
        });

        jMenu1.setText("Browse");

        home.setText("Home");
        home.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                homeActionPerformed(evt);
            }
        });
        jMenu1.add(home);

        deframe.setText("Decrypt");
        deframe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deframeActionPerformed(evt);
            }
        });
        jMenu1.add(deframe);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(tablecontainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ciphertext))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(encrypt, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel3))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(plaintext)
                                .addComponent(key, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(112, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(plaintext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(key, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(encrypt)
                        .addGap(27, 27, 27)
                        .addComponent(tablecontainer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(ciphertext, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void plaintextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_plaintextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_plaintextActionPerformed

    private void encryptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encryptActionPerformed
        // TODO add your handling code here:
         

       String text = plaintext.getText().toUpperCase();
       String k = key.getText().toUpperCase();
       String[] cut = text.split(" ");

       text = "";
       for(int i=0; i<cut.length; i++)
           text+=cut[i];

       if(k.length() > text.length()){
       JOptionPane.showMessageDialog(null, "Key shouldnâ€™t be longer than text length");
       plaintext.setText("");
       key.setText("");
       ciphertext.setText("");
       return;}

        if (text.equals("") || k.equals("")){
        JOptionPane.showMessageDialog(null, "Empty text or key! . \n Please re enter both text and key.");
        return;}

       if(validate(text)&&validate(k))
           ciphertext.setText(encrypt(text,k));

       else {
           JOptionPane.showMessageDialog(null, "The text or key you entered is not valid. \n Please use characters from A-Z or a-z.");
           plaintext.setText("");
           key.setText("");
           ciphertext.setText("");
       }        
        
    }//GEN-LAST:event_encryptActionPerformed

    private void ciphertextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ciphertextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ciphertextActionPerformed

    private void homeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_homeActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        GUI f = new GUI();
        f.setVisible(true);
    }//GEN-LAST:event_homeActionPerformed

    private void deframeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deframeActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        DeFrame d = new DeFrame();
        d.setVisible(true);
    }//GEN-LAST:event_deframeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EnFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EnFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EnFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EnFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EnFrame().setVisible(true);
            }
        });
    }
    
    public boolean validate(String str){
        str = str.trim().toUpperCase();
        for(int i=0; i<str.length(); i++){
          if(!Character.isLetter(str.charAt(i)))
              return false;
        }
     return true;
    }
    
    public String encrypt(String text, String key){
        
 /*
        tablecontainer.removeAll();
        JTable t = new JTable(6, text.length()); // (rows, cols)
        t.setDefaultEditor(Object.class, null);
        tablecontainer.add(t,rootPane);
        pack();
        t.setVisible(true);
 */
        //Create table, scrollpane, and jframe. 
        JTable t = new JTable(6, text.length()); 
        t.setDefaultEditor(Object.class, null);
        t.setBounds(30,40,200,300);
        t.setDragEnabled(false);
        t.setTableHeader(null);
        t.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        
        JScrollPane sp = new JScrollPane(t,JScrollPane.VERTICAL_SCROLLBAR_NEVER, JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);    
        JFrame tableframe = new JFrame();

        //Add pane to frame, but make sure its empty first  
        if(sp.getParent()!=null)
            tableframe.removeAll(); 
        
        tableframe.add(sp);
        tableframe.setSize(300,400); 
        tableframe.setVisible(true);

        
        
        // To populate first two rows (Plaintext characters and their values)
        int row = 0, val;
        for(int i=0; i<text.length(); i++){
            t.setValueAt(text.charAt(i), row++, i);
            val = text.charAt(i)-65;
            t.setValueAt(val, row, i);
            row = 0;
        }
        
        // To populate second two rows (Key characters and their values)
        int ki = 0;
        row = 2;
        for(int i=0; i<text.length(); i++){
            t.setValueAt(key.charAt(ki), row++, i);
            val = key.charAt(ki)-65;
            t.setValueAt(val, row, i);
            row = 2;
            ki++;    
            if(ki == key.length())
                ki = 0;
        }
        
        // To populate remaining rows (Ciphertext values and their corresponding characters)
        String ciphertext = "";
        row = 4;
        int ce;
        String ct;
        for(int i=0; i<text.length(); i++){
            ct = "";
            System.out.println(t.getValueAt(1,i).toString());
            int n1 = Integer.parseInt((t.getValueAt(1, i).toString()));
            int n2 = Integer.parseInt(t.getValueAt(3, i).toString());
            ce = n1+n2; 
            ce%=26;
            t.setValueAt(ce, row++, i);
            ct += (char)(ce+65);
            t.setValueAt(ct, row, i);
            row = 4;
            ciphertext+=ct;
        }
        
        //returns ciphertext to buttonclick method
        return ciphertext;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField ciphertext;
    private javax.swing.JMenuItem deframe;
    private javax.swing.JButton encrypt;
    private javax.swing.JMenuItem home;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField key;
    private javax.swing.JTextField plaintext;
    private javax.swing.JPanel tablecontainer;
    // End of variables declaration//GEN-END:variables
}
